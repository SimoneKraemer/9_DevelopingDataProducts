class(test[9])
bla <- test[9]
bla
bla[0]
bla[1]
bla.value
test$adj.r.squared
sigTable <- anova(lm(mpg ~ . , data = dataCars))
kable(sigTable, digits = 5, align = "r")
result <- anova(fitModel1, fitModel2, fitModel3)
# Model 2:
fitModel2 <- lm(mpg ~ am + cyl + disp + wt, data = dataCars)
coefModel2 <- summary(fitModel2)$coef
kable(coefModel2, digits = 4, align = "r")
# Model 3:
fitModel3 <- lm(mpg ~ am + cyl + wt, data = dataCars)
coefModel3 <- summary(fitModel3)$coef
kable(coefModel3, digits = 4, align = "r")
result <- anova(fitModel1, fitModel2, fitModel3)
kable(result, digits = 4, align = "r")
result <- anova(fitModel1, fitModel3, fitModel2)
kable(result, digits = 4, align = "r")
result <- anova(fitModel1, fitModel3, fitModel2)
kable(result, align = "r")
result <- anova(fitModel1, fitModel2, fitModel3)
kable(result, align = "r")
result <- anova(fitModel1, fitModel3, fitModel2)
kable(result, align = "r")
result <- anova(fitModel1, fitModel3, fitModel2)
result <- anova(fitModel1, fitModel3, fitModel2)
result <- anova(fitModel1, fitModel3, fitModel2)
result
result <- anova(fitModel1, fitModel2, fitModel3)
result
result <- anova(fitModel1, fitModel3, fitModel2)
result
# Model 2:
fitModel2 <- lm(mpg ~ am + cyl + disp + wt -1, data = dataCars)
coefModel2 <- summary(fitModel2)$coef
kable(coefModel2, digits = 4, align = "r")
# Model 2:
fitModel2 <- lm(mpg ~ am + cyl + disp + wt, data = dataCars)
coefModel2 <- summary(fitModel2)$coef
kable(coefModel2, digits = 4, align = "r")
coefModel3
coefModel3[2,1]
coefModel1[2,1]
coefModel1
install.packages(caret)
install.packages("caret")
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
library(caret)
version
update.packages(checkBuilt=TRUE)
update.packages()
y
y
install.packages("pgmm")
install.packages("rattle")
library(rattle)
library(rattle)
data(segmentationOriginal)
# Generate train and test dataset
trainData <- segmentationOriginal[segmentationOriginal$Case == "Train", ]
testData <- segmentationOriginal[segmentationOriginal$Case == "Test", ]
# Fit the model
set.seed(125)
modFit <- rpart(Class ~ ., data = trainData)
library(caret)
library(AppliedPredictiveModeling)
library(ElemStatLearn)
library(rpart)
# Question 1:
library(rattle)
data(segmentationOriginal)
# Generate train and test dataset
trainData <- segmentationOriginal[segmentationOriginal$Case == "Train", ]
testData <- segmentationOriginal[segmentationOriginal$Case == "Test", ]
# Fit the model
set.seed(125)
modFit <- rpart(Class ~ ., data = trainData)
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
install.packages("ElemStatLearn")
library(caret)
install.packages("caret")
install.packages("rpart")
library(caret)
library(AppliedPredictiveModeling)
library(ElemStatLearn)
library(rpart)
install.packages("AppliedPredictiveModeling")
library(caret)
library(AppliedPredictiveModeling)
library(ElemStatLearn)
library(rpart)
# Question 1:
library(rattle)
data(segmentationOriginal)
data(segmentationOriginal)
library(caret)
install.packages("ggplot2")
library(caret)
library(caret)
install.packages("caret")
library(caret)
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
library(caret)
library(AppliedPredictiveModeling)
library(ElemStatLearn)
library(rpart)
library(rattle)
data(segmentationOriginal)
trainData <- segmentationOriginal[segmentationOriginal$Case == "Train", ]
testData <- segmentationOriginal[segmentationOriginal$Case == "Test", ]
# Fit the model
set.seed(125)
modFit <- rpart(Class ~ ., data = trainData)
fancyRpartPlot(modFit$finalModel)
str(tainData)
trainData <- segmentationOriginal[segmentationOriginal$Case == "Train", ]
testData <- segmentationOriginal[segmentationOriginal$Case == "Test", ]
str(trainData)
modFit <- rpart(Class ~ ., data = trainData)
modFit
modFit <- train(Class ~ ., data = trainData, method = 'rpart')
fancyRpartPlot(modFit$finalModel)
setwd("D:/Coursera/DataScience/Course9/Repo/Week3_Plotly")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(plotly)
dataAirQuality <- airquality
dataAirQuality <- dataAirQuality[!is.na(dataAirQuality$Ozone), ]
dataAirQuality <- airquality
dataAirQuality <- dataAirQuality[!is.na(dataAirQuality$Ozone), ]
head(dataAirQuality)
# Define axis-style
x1 <- list(title = "Wind", autotick = TRUE)
x2 <- list(title = "Solar Radiation", autotick = TRUE)
x3 <- list(title = "Temperature", autotick = TRUE)
y1 <- list(title = "Ozone", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
y2 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
y3 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define subplots
p1 <- plot_ly(airquality, x = ~Wind, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "blue" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x1, yaxis = y1, showlegend = FALSE)
p2 <- plot_ly(airquality, x = ~Solar.R, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "orange" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x2, yaxis = y2, showlegend = FALSE)
p3 <- plot_ly(airquality, x = ~Temp, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "red" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x3, yaxis = y3, showlegend = FALSE)
# Put subplots together to one plot
p2d <- subplot(p1, p2, p3, titleX = TRUE, titleY = TRUE)
hide_legend(p3d)
# Define axis-style
x1 <- list(title = "Wind", autotick = TRUE)
x2 <- list(title = "Solar Radiation", autotick = TRUE)
x3 <- list(title = "Temperature", autotick = TRUE)
y1 <- list(title = "Ozone", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
y2 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
y3 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define subplots
p1 <- plot_ly(airquality, x = ~Wind, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "blue" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x1, yaxis = y1, showlegend = FALSE)
p2 <- plot_ly(airquality, x = ~Solar.R, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "orange" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x2, yaxis = y2, showlegend = FALSE)
p3 <- plot_ly(airquality, x = ~Temp, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "red" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x3, yaxis = y3, showlegend = FALSE)
# Put subplots together to one plot
p2d <- subplot(p1, p2, p3, titleX = TRUE, titleY = TRUE)
hide_legend(p2d)
p2d
# Define axis-style
x1 <- list(title = "Wind", autotick = TRUE)
x2 <- list(title = "Solar Radiation", autotick = TRUE)
x3 <- list(title = "Temperature", autotick = TRUE)
y1 <- list(title = "Ozone", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
y2 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
y3 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define subplots
p1 <- plot_ly(airquality, x = ~Wind, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "blue" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x1, yaxis = y1, showlegend = FALSE)
p2 <- plot_ly(airquality, x = ~Solar.R, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "orange" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x2, yaxis = y2, showlegend = FALSE)
p3 <- plot_ly(airquality, x = ~Temp, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "red" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x3, yaxis = y3, showlegend = FALSE)
# Put subplots together to one plot
p2d <- subplot(p1, p2, p3, titleX = TRUE, titleY = TRUE)
hide_legend(p2d)
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker=list(color = ~Ozone , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x, yaxis = y, zaxis = z, showlegend = TRUE)
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker=list(color = ~Ozone , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x, yaxis = y, zaxis = z, showlegend = TRUE)
p3d
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker=list(color = ~Ozone , size = 10 , opacity = 1)) %>%
layout(xaxis = x, yaxis = y, zaxis = z, showscale = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker=list(color = ~Ozone , size = 10 , opacity = 1)) %>%
layout(xaxis = x, yaxis = y, zaxis = z, showscale = TRUE, showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
colorscale = “Blues”,
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", colors = "YlOrRd",
marker=list(color = ~Ozone , size = 10 , opacity = 1)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z, showscale = TRUE, showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
size = 10, colors = "YlOrRd") %>%
#marker=list(color = ~Ozone , size = 10 , opacity = 1))
layout(main = main, xaxis = x, yaxis = y, zaxis = z, showscale = TRUE, showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
size = 2, colors = "YlOrRd") %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z, showscale = TRUE, showlegend = TRUE)
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker = list(color = ~Ozone, colorscale = c('#FFE1A1', '#683531'),
showscale = TRUE)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker = list(color = ~Ozone, colorscale = c('#0C4B8E', '#BF382A'),
showscale = TRUE)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker = list(color = ~Ozone, colorscale = c('blue', 'red'),
showscale = TRUE)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers",
marker = list(color = ~Ozone, colorscale = c('green', 'purple'),
showscale = TRUE)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", colors = "Blues",
marker = list(color = ~Ozone, showscale = TRUE)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
colors = "Blues",
marker = list(size = 4 , opacity = 1.5, showscale = TRUE)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
main <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
colors = "Blues",
marker = list(size = 10 , opacity = 1.5)) %>%
layout(main = main, xaxis = x, yaxis = y, zaxis = z)#, showscale = TRUE,
#showlegend = TRUE)
p3d
min(airquality$Ozone)
min(dataAirQuality$Ozone)
max(dataAirQuality$Ozone)
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
title <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
colors = "Blues",
marker = list(size = 10 , opacity = 1.5)) %>%
layout(title = title, xaxis = x, yaxis = y, zaxis = z)
p3d
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
title <- list(title = "Ozone")
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
colors = "Blues",
marker = list(size = 10 , opacity = 1.5)) %>%
layout(title = title,
scene = list(xaxis = x, yaxis = y,zaxis = z))
#layout(title = title, xaxis = x, yaxis = y, zaxis = z)
p3d
title
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
title <- "Ozone"
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
colors = "Blues",
marker = list(size = 10 , opacity = 1.5)) %>%
layout(title = title,
scene = list(xaxis = x, yaxis = y,zaxis = z))
#layout(title = title, xaxis = x, yaxis = y, zaxis = z)
p3d
# Define axis-style
x1 <- list(title = "Wind", autotick = TRUE)
x2 <- list(title = "Solar Radiation", autotick = TRUE)
x3 <- list(title = "Temperature", autotick = TRUE)
y1 <- list(title = "Ozone", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
y2 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
y3 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define subplots
p1 <- plot_ly(airquality, x = ~Wind, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "blue" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x1, yaxis = y1, showlegend = FALSE)
p2 <- plot_ly(airquality, x = ~Solar.R, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "orange" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x2, yaxis = y2, showlegend = FALSE)
p3 <- plot_ly(airquality, x = ~Temp, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "red" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x3, yaxis = y3, showlegend = FALSE)
# Put subplots together to one plot
p2d <- subplot(p1, p2, p3, titleX = TRUE, titleY = TRUE)
hide_legend(p2d)
p2d
# Define axis-style
x1 <- list(title = "Wind", autotick = TRUE)
x2 <- list(title = "Solar Radiation", autotick = TRUE)
x3 <- list(title = "Temperature", autotick = TRUE)
y1 <- list(title = "Ozone", showticklabels = TRUE, showline = TRUE, zeroline = TRUE)
y2 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
y3 <- list(title = "", showticklabels = FALSE, showline = TRUE, zeroline = TRUE)
# Define subplots
p1 <- plot_ly(airquality, x = ~Wind, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "blue" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x1, yaxis = y1, showlegend = FALSE)
p2 <- plot_ly(airquality, x = ~Solar.R, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "orange" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x2, yaxis = y2, showlegend = FALSE)
p3 <- plot_ly(airquality, x = ~Temp, y = ~Ozone,
type = "scatter", mode = "markers",
marker=list(color = "red" , size = 10 , opacity = 0.5)) %>%
layout(xaxis = x3, yaxis = y3, showlegend = FALSE)
# Put subplots together to one plot
p2d <- subplot(p1, p2, p3, titleX = TRUE, titleY = TRUE)
hide_legend(p2d)
# Define axis-style
x <- list(title = "Wind", autotick = TRUE)
y <- list(title = "Temperature", showticklabels = TRUE, showline = TRUE,
zeroline = TRUE)
z <- list(title = "Solar Radiation", showticklabels = FALSE, showline = TRUE,
zeroline = TRUE)
title <- "Ozone"
# Define plot
p3d <- plot_ly(airquality, x = ~Wind, y = ~Temp, z = ~Solar.R,
type = "scatter3d", mode = "markers", color = ~Ozone,
colors = "Blues",
marker = list(size = 10 , opacity = 1.5)) %>%
layout(title = title,
scene = list(xaxis = x, yaxis = y,zaxis = z))
3dplot
p3d
library(knitr)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(plotly)
